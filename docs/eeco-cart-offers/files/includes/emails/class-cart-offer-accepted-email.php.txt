<?php

if ( ! defined( 'ABSPATH' ) ) {
	exit; // Exit if accessed directly
}

if ( ! class_exists( 'WC_Email' ) ) {
	WC()->mailer();
}

/**
 * Class Eeco_WCO_New_Offer_Email
 */
class Eeco_WCO_Offer_Accepted_Email extends WC_Email {

	/**
	 * Create an instance of the class.
	 *
	 * @access public
	 * @return void
	 */
	function __construct() {
		$this->id          = 'eeco_wco_offer_accepted_email';
		$this->title       = __( 'Quote submitted', 'eeco-wco' );
		$this->description = __( 'An email sent to customer when quote has been submitted', 'eeco-wco' );
		$this->customer_email = true;
		$this->template_html  = 'emails/offer-accepted.php';
		$this->template_plain = 'emails/plain/noffer-accepted-plain.php';

        //TODO: enable overriding templates in themes
        $this->template_base = EECO_WCO_ROOT . 'templates/';

        $this->placeholders   = array(
            '{cart_total}' => '',
            '{offer_date}' => '',
            '{discount_type}' => '',
            '{discount_value}' => '',
            '{expiration_date}' => '',
            '{product_table}' => '',
            '{my_account_link}' => ''
        );

		add_action( 'eeco_wco_offer_accepted_email', array( $this, 'enqueue_emails' ), 10, 1 );

        $this->recipient = $this->get_option( 'recipient', get_option( 'admin_email' ) );

		parent::__construct();
	}

    /**
     * Get email subject.
     *
     * @return string
     */
    public function get_default_subject() {
        return _x( '{site_title} Quote received', 'eeco-wco' );
    }

    /**
     * Get email heading.
     *
     * @return string
     */
    public function get_default_heading() {
        return __( 'Quote details', 'eeco-wco' );
    }

    /**
     * The main content of the email
     * 
     * @return string
     */
    public function get_default_content(){
        return __( 'Quote received {product_table} {totals_table} {expiration_date} {my_account_link}', 'eeco-wco' );
    }

	/**
	 * Enqueues emails when a request has been made
	 * @param Array $offer The offer data
	 */
	public function enqueue_emails($offer){
        $cart_total = 0;
        $_offer = wco_get_offer($offer['items'][0]->post_id);
        $taxes = get_option( 'woocommerce_tax_display_shop' );
        foreach ($offer['items'] as &$offer_product) {
            $product = wc_get_product($offer_product->product_id);

            $new_item = [];

            $new_item['name'] = $product->get_name();
            $new_item['quantity'] = $offer_product->product_quantity;
            $new_item['total'] = $taxes === 'incl' ? $offer_product->line_total + $offer_product->tax_total : $offer_product->line_total;

            $cart_total += $new_item['total'];

            $offer_product = $new_item;
        }

        $offer['total'] = $cart_total;
        
        $offer['discount'] = get_offer_discount_value($_offer);
        $offer['discounted_price'] = get_offer_discount($_offer);

        $this->recipient = $offer['email'];

		$this->offer = $offer;

        $this->placeholders['{product_table}'] = eeco_wco_get_email_table_template($offer);
        $this->placeholders['{totals_table}'] = eeco_wco_get_email_table_template($offer, 'totals');
        $this->placeholders['{expiration_date}'] = "<h3>". __('Offer expires: ', 'eeco-wco') .  $offer['expiry_date'] . "</h3>";
        $this->placeholders['{my_account_link}'] = "<h3>". __('Use your offer', 'eeco-wco') . " <a href='" . wc_get_account_endpoint_url('wco-cart-offers') . "'>" . __('here', 'eeco-wco') ."</a></h3>";

		$this->trigger();
	}

	/**  
	* Trigger Function that will send this email to the recipient
	*/
	public function trigger() {
		if ( ! $this->is_enabled() || ! $this->get_recipient() ) {
			return;
		}

		$this->send( $this->get_recipient(), $this->get_subject(), $this->get_content(), $this->get_headers(), $this->get_attachments() );
	}

	
	/**
	 * Get content html
	 */
	public function get_content_html() {
		return wc_get_template_html(    
			$this->template_html, 
            array(
				'offer'         => $this->offer,
				'email_heading' => $this->get_heading(),
                'content'       => $this->format_string($this->get_option('content')),
				'sent_to_admin' => false,
				'plain_text'    => false,
				'email'         => $this,
			), '', $this->template_base 
		);
	}

	/**
	 * Get content plain
	 */
	public function get_content_plain() {
		return wc_get_template_html(
			$this->template_plain, 
            array(
				'offer'         => $this->offer,
				'email_heading' => $this->get_heading(),
                'content'       => $this->format_string($this->get_option('content')),
				'sent_to_admin' => false,
				'plain_text'    => true,
				'email'         => $this,
			), '', $this->template_base 
		);
	}

    /**
     * Settings fields
     */
    public function init_form_fields() {
        /* translators: %s: list of placeholders */
        $placeholder_text  = sprintf( __( 'Available placeholders: %s', 'eeco-wco' ), '<code>' . esc_html( implode( '</code>, <code>', array_keys( $this->placeholders ) ) ) . '</code>' );
        $this->form_fields = array(
            'enabled'            => array(
                'title'   => __( 'Enable/Disable', 'eeco-wco' ),
                'type'    => 'checkbox',
                'label'   => __( 'Enable this email notification', 'eeco-wco' ),
                'default' => 'yes',
            ),
            'recipient'          => array(
                'title'       => __( 'Recipient(s)', 'eeco-wco' ),
                'type'        => 'text',
                /* translators: %s: admin email */
                'description' => sprintf( __( 'Enter recipients (comma separated) for this email. Defaults to %s.', 'eeco-wco' ), '<code>' . esc_attr( get_option( 'admin_email' ) ) . '</code>' ),
                'placeholder' => '',
                'default'     => '',
                'desc_tip'    => true,
            ),
            'subject'            => array(
                'title'       => __( 'Subject', 'eeco-wco' ),
                'type'        => 'text',
                'desc_tip'    => true,
                'description' => $placeholder_text,
                'placeholder' => $this->get_default_subject(),
                'default'     => '',
            ),
            'heading'            => array(
                'title'       => __( 'Email heading', 'eeco-wco' ),
                'type'        => 'text',
                'desc_tip'    => true,
                'description' => $placeholder_text,
                'placeholder' => $this->get_default_heading(),
                'default'     => '',
            ),
            'content' => array(
                'title'       => __( 'Content', 'eeco-wco' ),
                'description' => __( 'The whole content of the email', 'eeco-wco' ) . ' ' . $placeholder_text,
                'css'         => 'width:400px; height: 75px;',
                'placeholder' => __( 'N/A', 'eeco-wco' ),
                'type'        => 'textarea',
                'default'     => $this->get_default_content(),
                'desc_tip'    => true,
            ),
            'email_type'         => array(
                'title'       => __( 'Email type', 'eeco-wco' ),
                'type'        => 'select',
                'description' => __( 'Choose which format of email to send.', 'eeco-wco' ),
                'default'     => 'html',
                'class'       => 'email_type wc-enhanced-select',
                'options'     => $this->get_email_type_options(),
                'desc_tip'    => true,
            ),
        );
    }
}

?>